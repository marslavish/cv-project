{"version":3,"sources":["components/Name.js","components/Profession.js","components/Profile.js","components/WorkExp.js","components/Contact.js","components/Education.js","components/Skills.js","App.js","index.js"],"names":["NameField","props","handleInputChange","e","setState","editingName","target","value","handleToggleEditingClick","editingMode","state","handleSaveClick","savedName","handleCancelClick","textInput","React","createRef","this","focus","className","htmlFor","type","id","name","onChange","autoComplete","ref","input","onClick","disabled","Component","cols","rows","WorkExp","handleAddNameClick","names","uniqid","handleDeleteClick","prevState","map","index","key","WorkExpField","handleJobTitleInputChange","editingJobTitle","handleStartDateInputChange","editingStartDate","handleEndDateInputChange","editingEndDate","handleCompanyInputChange","editingCompany","handleMainTasksInputChange","editingMainTasks","savedJobTitle","savedCompany","savedMainTasks","savedStartDate","savedEndDate","handleStartDateChange","handleEndDateChange","JobTitle","current","Date","min","max","Company","MainTasks","handleLocationInputChange","editingLocation","handlePhoneInputChange","editingPhone","handleEmailInputChange","editingEmail","savedLocation","savedPhone","savedEmail","Location","Phone","Email","Education","EducationField","handleSchoolInputChange","editingSchool","handleDegreeInputChange","editingDegree","handleFieldOfStudyInputChange","editingFieldOfStudy","savedSchool","savedDegree","savedFieldOfStudy","School","Degree","list","FieldOfStudy","SkillsField","handleSkillInputChange","handleYearsInputChange","editingYears","savedYears","Skills","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02569945.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class NameField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingMode: false,\n      editingName: \"\",\n      savedName: \"\",\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.state.editingMode) this.textInput.focus();\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ editingName: e.target.value });\n  };\n\n  handleToggleEditingClick = () => {\n    this.setState({ editingMode: !this.state.editingMode });\n  };\n\n  handleSaveClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({ savedName: this.state.editingName });\n  };\n\n  handleCancelClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({ editingName: this.state.savedName });\n  };\n\n  render() {\n    const { editingMode, editingName, savedName } = this.state;\n\n    return (\n      <div>\n        {editingMode ? (\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"username\"\n              className=\"form-control\"\n              value={editingName}\n              onChange={this.handleInputChange}\n              autoComplete=\"false\"\n              ref={(input) => (this.textInput = input)}\n            />\n            {/* SAVE BTN */}\n            <button\n              onClick={this.handleSaveClick}\n              className=\"btn btn-primary\"\n              disabled={!editingName}\n            >\n              Save\n            </button>\n            {/* CANCEL BTN */}\n            <button\n              onClick={this.handleCancelClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <h2\n            className=\"name display-6 font-weight-bold mb-3\"\n            onClick={this.handleToggleEditingClick}\n          >\n            {savedName ? (\n              savedName\n            ) : (\n              <mark className=\"font-weight-normal\">Name</mark>\n            )}\n          </h2>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class NameField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingMode: false,\n      editingName: \"\",\n      savedName: \"\",\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.state.editingMode) this.textInput.focus();\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ editingName: e.target.value });\n  };\n\n  handleToggleEditingClick = () => {\n    this.setState({ editingMode: !this.state.editingMode });\n  };\n\n  handleSaveClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({ savedName: this.state.editingName });\n  };\n\n  handleCancelClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({ editingName: this.state.savedName });\n  };\n\n  render() {\n    const { editingMode, editingName, savedName } = this.state;\n\n    return (\n      <div>\n        {editingMode ? (\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Profession</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"username\"\n              className=\"form-control\"\n              value={editingName}\n              onChange={this.handleInputChange}\n              autoComplete=\"false\"\n              ref={(input) => (this.textInput = input)}\n            />\n            {/* SAVE BTN */}\n            <button\n              onClick={this.handleSaveClick}\n              className=\"btn btn-primary\"\n              disabled={!editingName}\n            >\n              Save\n            </button>\n            {/* CANCEL BTN */}\n            <button\n              onClick={this.handleCancelClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <p\n            className=\"name text-uppercase font-weight-light\"\n            onClick={this.handleToggleEditingClick}\n          >\n            {savedName ? (\n              savedName\n            ) : (\n              <mark className=\"text-capitalize font-weight-normal\">\n                Profession\n              </mark>\n            )}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class NameField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingMode: false,\n      editingName: \"\",\n      savedName: \"\",\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.state.editingMode) this.textInput.focus();\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ editingName: e.target.value });\n  };\n\n  handleToggleEditingClick = () => {\n    this.setState({ editingMode: !this.state.editingMode });\n  };\n\n  handleSaveClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({ savedName: this.state.editingName });\n  };\n\n  handleCancelClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({ editingName: this.state.savedName });\n  };\n\n  render() {\n    const { editingMode, editingName, savedName } = this.state;\n\n    return (\n      <div className=\"container-profile\">\n        {editingMode ? (\n          <div className=\"form-group\">\n            <label htmlFor=\"profile\">Profile</label>\n            <textarea\n              name=\"profile\"\n              id=\"profile\"\n              cols=\"10\"\n              rows=\"3\"\n              className=\"form-control\"\n              value={editingName}\n              onChange={this.handleInputChange}\n              ref={(input) => (this.textInput = input)}\n            ></textarea>\n            {/* SAVE BTN */}\n            <button\n              onClick={this.handleSaveClick}\n              className=\"btn btn-primary\"\n              disabled={!editingName}\n            >\n              Save\n            </button>\n            {/* CANCEL BTN */}\n            <button\n              onClick={this.handleCancelClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <p className=\"name\" onClick={this.handleToggleEditingClick}>\n            {savedName ? savedName : <mark>Profile</mark>}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nexport default class WorkExp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      names: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      names: [{ id: uniqid() }],\n    });\n  }\n\n  handleAddNameClick = () => {\n    this.setState({\n      names: [...this.state.names, { id: uniqid() }],\n    });\n  };\n\n  handleDeleteClick = (id) => {\n    this.setState((prevState) => ({\n      names: prevState.names.map((name) => {\n        if (name.id === id) name.id = \"\";\n        return name;\n      }),\n    }));\n  };\n\n  render() {\n    const { names } = this.state;\n\n    return (\n      <div>\n        <h4 className=\"section-title\">Work Experience</h4>\n        <hr />\n\n        {names.map((name, index) => {\n          if (!name.id) return null;\n          if (index === 0) {\n            return (\n              <WorkExpField\n                id={name.id}\n                key={name.id}\n                editingMode={false}\n                handleDeleteClick={this.handleDeleteClick}\n              />\n            );\n          }\n          return (\n            <WorkExpField\n              id={name.id}\n              key={name.id}\n              editingMode={true}\n              handleDeleteClick={this.handleDeleteClick}\n            />\n          );\n        })}\n\n        <p onClick={this.handleAddNameClick} className=\"add-name\">\n          &#43; Add Work Experience\n        </p>\n      </div>\n    );\n  }\n}\n\nclass WorkExpField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingMode: props.editingMode,\n      editingJobTitle: \"\",\n      savedJobTitle: \"\",\n      editingStartDate: \"\",\n      savedStartDate: \"\",\n      editingEndDate: \"\",\n      savedEndDate: \"\",\n      editingCompany: \"\",\n      savedCompany: \"\",\n      editingMainTasks: \"\",\n      savedMainTasks: \"\",\n    };\n  }\n\n  handleJobTitleInputChange = (e) => {\n    this.setState({ editingJobTitle: e.target.value });\n  };\n\n  handleStartDateInputChange = (e) => {\n    this.setState({ editingStartDate: e.target.value });\n  };\n\n  handleEndDateInputChange = (e) => {\n    this.setState({ editingEndDate: e.target.value });\n  };\n\n  handleCompanyInputChange = (e) => {\n    this.setState({ editingCompany: e.target.value });\n  };\n\n  handleMainTasksInputChange = (e) => {\n    this.setState({ editingMainTasks: e.target.value });\n  };\n\n  handleToggleEditingClick = () => {\n    this.setState({ editingMode: !this.state.editingMode });\n  };\n\n  handleSaveClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      savedJobTitle: this.state.editingJobTitle,\n      savedCompany: this.state.editingCompany,\n      savedMainTasks: this.state.editingMainTasks,\n      savedStartDate: this.state.editingStartDate,\n      savedEndDate: this.state.editingEndDate,\n    });\n  };\n\n  handleCancelClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      editingJobTitle: this.state.savedJobTitle,\n      editingCompany: this.state.savedCompany,\n      editingMainTasks: this.state.savedMainTasks,\n      editingStartDate: this.state.savedStartDate,\n      editingEndDate: this.state.savedEndDate,\n    });\n  };\n\n  render() {\n    const {\n      editingMode,\n      editingJobTitle,\n      savedJobTitle,\n      editingStartDate,\n      savedStartDate,\n      editingEndDate,\n      savedEndDate,\n      editingCompany,\n      savedCompany,\n      editingMainTasks,\n      savedMainTasks,\n    } = this.state;\n\n    const { handleDeleteClick, id } = this.props;\n\n    return (\n      <div>\n        {editingMode ? (\n          <div className=\"form-group\">\n            <JobTitle\n              editingJobTitle={editingJobTitle}\n              handleInputChange={this.handleJobTitleInputChange}\n            />\n            <Date\n              editingStartDate={editingStartDate}\n              handleStartDateChange={this.handleStartDateInputChange}\n              editingEndDate={editingEndDate}\n              handleEndDateChange={this.handleEndDateInputChange}\n            />\n            <Company\n              editingCompany={editingCompany}\n              handleInputChange={this.handleCompanyInputChange}\n            />\n            <MainTasks\n              editingMainTasks={editingMainTasks}\n              handleInputChange={this.handleMainTasksInputChange}\n            />\n            {/* SAVE BTN */}\n            <button onClick={this.handleSaveClick} className=\"btn btn-primary\">\n              Save\n            </button>\n            {/* CANCEL BTN */}\n            <button\n              onClick={this.handleCancelClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Cancel\n            </button>\n            {/* DELETE BTN */}\n            <button\n              className=\"btn btn-outline-danger delete-icon\"\n              onClick={() => handleDeleteClick(id)}\n            >\n              <span>&times;</span>\n            </button>\n          </div>\n        ) : (\n          <div className=\"container-work-exp\">\n            <div className=\"job-title\">\n              <p\n                className=\"name job font-weight-bold\"\n                onClick={this.handleToggleEditingClick}\n              >\n                {savedJobTitle ? (\n                  savedJobTitle\n                ) : (\n                  <mark className=\"font-weight-normal\">Job Title</mark>\n                )}\n              </p>\n              <small className=\"name\" onClick={this.handleToggleEditingClick}>\n                {savedStartDate || savedEndDate\n                  ? savedStartDate && savedEndDate\n                    ? savedStartDate + \" to \" + savedEndDate\n                    : savedStartDate || savedEndDate\n                  : null}\n              </small>\n            </div>\n            <p className=\"name\" onClick={this.handleToggleEditingClick}>\n              {savedCompany ? savedCompany : <mark>Company</mark>}\n            </p>\n            <p className=\"name\" onClick={this.handleToggleEditingClick}>\n              {savedMainTasks ? savedMainTasks : <mark>Main Tasks</mark>}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass JobTitle extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.textInput.current.focus();\n  }\n\n  render() {\n    const { editingJobTitle, handleInputChange } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"jobTitle\">Job Title</label>\n        <input\n          type=\"text\"\n          id=\"jobTitle\"\n          name=\"jobTitle\"\n          className=\"form-control\"\n          value={editingJobTitle}\n          onChange={handleInputChange}\n          ref={this.textInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst Date = ({\n  editingStartDate,\n  handleStartDateChange,\n  editingEndDate,\n  handleEndDateChange,\n}) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        {/* START DATE */}\n        <label htmlFor=\"start\">Start Date:</label>\n        <input\n          type=\"month\"\n          id=\"start\"\n          name=\"start\"\n          className=\"form-control\"\n          min=\"2000-01\"\n          max=\"2020-12\"\n          value={editingStartDate}\n          onChange={handleStartDateChange}\n        />\n      </div>\n      <div className=\"col\">\n        {/* END DATE */}\n        <label htmlFor=\"end\">End Date:</label>\n        <input\n          type=\"month\"\n          id=\"end\"\n          name=\"end\"\n          className=\"form-control\"\n          min=\"2000-01\"\n          max=\"2020-12\"\n          value={editingEndDate}\n          onChange={handleEndDateChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst Company = ({ editingCompany, handleInputChange }) => {\n  return (\n    <div>\n      <label htmlFor=\"company\">Company</label>\n      <input\n        type=\"text\"\n        id=\"company\"\n        name=\"company\"\n        className=\"form-control\"\n        value={editingCompany}\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n\nconst MainTasks = ({ editingMainTasks, handleInputChange }) => {\n  return (\n    <div>\n      <label htmlFor=\"mainTasks\">Main Tasks</label>\n      <input\n        type=\"text\"\n        id=\"mainTasks\"\n        name=\"mainTasks\"\n        className=\"form-control\"\n        value={editingMainTasks}\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport default class NameField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingMode: false,\n      editingLocation: \"\",\n      savedLocation: \"\",\n      editingPhone: \"\",\n      savedPhone: \"\",\n      editingEmail: \"\",\n      savedEmail: \"\",\n    };\n    // this.textInput = React.createRef();\n  }\n\n  handleLocationInputChange = (e) => {\n    this.setState({ editingLocation: e.target.value });\n  };\n\n  handlePhoneInputChange = (e) => {\n    this.setState({ editingPhone: e.target.value });\n  };\n\n  handleEmailInputChange = (e) => {\n    this.setState({ editingEmail: e.target.value });\n  };\n\n  handleToggleEditingClick = () => {\n    this.setState({ editingMode: !this.state.editingMode });\n  };\n\n  handleSaveClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      savedLocation: this.state.editingLocation,\n      savedPhone: this.state.editingPhone,\n      savedEmail: this.state.editingEmail,\n    });\n  };\n\n  handleCancelClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      editingLocation: this.state.savedLocation,\n      editingPhone: this.state.savedPhone,\n      editingEmail: this.state.savedEmail,\n    });\n  };\n\n  render() {\n    const {\n      editingMode,\n      editingLocation,\n      savedLocation,\n      editingPhone,\n      savedPhone,\n      editingEmail,\n      savedEmail,\n    } = this.state;\n\n    return (\n      <div className=\"container-contact\">\n        {editingMode ? (\n          <div className=\"form-group\">\n            <Location\n              editingLocation={editingLocation}\n              handleInputChange={this.handleLocationInputChange}\n            />\n            <Phone\n              editingPhone={editingPhone}\n              handleInputChange={this.handlePhoneInputChange}\n            />\n            <Email\n              editingEmail={editingEmail}\n              handleInputChange={this.handleEmailInputChange}\n            />\n            {/* SAVE BTN */}\n            <button onClick={this.handleSaveClick} className=\"btn btn-primary\">\n              Save\n            </button>\n            {/* CANCEL BTN */}\n            <button\n              onClick={this.handleCancelClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <div>\n            <p className=\"name\" onClick={this.handleToggleEditingClick}>\n              {savedLocation ? savedLocation : <mark>Location</mark>}\n            </p>\n            <p className=\"name\" onClick={this.handleToggleEditingClick}>\n              {savedPhone ? savedPhone : <mark>Phone number</mark>}\n            </p>\n            <p className=\"name\" onClick={this.handleToggleEditingClick}>\n              {savedEmail ? savedEmail : <mark>Email address</mark>}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass Location extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.textInput.current.focus();\n  }\n\n  render() {\n    const { editingLocation, handleInputChange } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"location\">Location</label>\n        <input\n          type=\"text\"\n          id=\"location\"\n          name=\"location\"\n          className=\"form-control\"\n          value={editingLocation}\n          onChange={handleInputChange}\n          ref={this.textInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst Phone = ({ editingPhone, handleInputChange }) => {\n  return (\n    <div>\n      <label htmlFor=\"phone\">Phone</label>\n      <input\n        type=\"text\"\n        id=\"phone\"\n        name=\"phone\"\n        className=\"form-control\"\n        value={editingPhone}\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n\nconst Email = ({ editingEmail, handleInputChange }) => {\n  return (\n    <div>\n      <label htmlFor=\"email\">Email</label>\n      <input\n        type=\"text\"\n        id=\"email\"\n        name=\"email\"\n        className=\"form-control\"\n        value={editingEmail}\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nexport default class Education extends Component {\n  constructor() {\n    super();\n    this.state = {\n      names: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      names: [{ id: uniqid() }],\n    });\n  }\n\n  handleAddNameClick = () => {\n    this.setState({\n      names: [...this.state.names, { id: uniqid() }],\n    });\n  };\n\n  handleDeleteClick = (id) => {\n    this.setState((prevState) => ({\n      names: prevState.names.map((name) => {\n        if (name.id === id) name.id = \"\";\n        return name;\n      }),\n    }));\n  };\n\n  render() {\n    const { names } = this.state;\n\n    return (\n      <div>\n        <h4 className=\"section-title\">Education</h4>\n        <hr />\n\n        {names.map((name, index) => {\n          if (!name.id) return null;\n          if (index === 0) {\n            return (\n              <EducationField\n                id={name.id}\n                key={name.id}\n                editingMode={false}\n                handleDeleteClick={this.handleDeleteClick}\n              />\n            );\n          }\n          return (\n            <EducationField\n              id={name.id}\n              key={name.id}\n              editingMode={true}\n              handleDeleteClick={this.handleDeleteClick}\n            />\n          );\n        })}\n\n        <p onClick={this.handleAddNameClick} className=\"add-name\">\n          &#43; Add Education\n        </p>\n      </div>\n    );\n  }\n}\n\nclass EducationField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingMode: props.editingMode,\n      editingSchool: \"\",\n      savedSchool: \"\",\n      editingStartDate: \"\",\n      savedStartDate: \"\",\n      editingEndDate: \"\",\n      savedEndDate: \"\",\n      editingDegree: \"\",\n      savedDegree: \"\",\n      editingFieldOfStudy: \"\",\n      savedFieldOfStudy: \"\",\n    };\n  }\n\n  handleSchoolInputChange = (e) => {\n    this.setState({ editingSchool: e.target.value });\n  };\n\n  handleStartDateInputChange = (e) => {\n    this.setState({ editingStartDate: e.target.value });\n  };\n\n  handleEndDateInputChange = (e) => {\n    this.setState({ editingEndDate: e.target.value });\n  };\n\n  handleDegreeInputChange = (e) => {\n    this.setState({ editingDegree: e.target.value });\n  };\n\n  handleFieldOfStudyInputChange = (e) => {\n    this.setState({ editingFieldOfStudy: e.target.value });\n  };\n\n  handleToggleEditingClick = () => {\n    this.setState({ editingMode: !this.state.editingMode });\n  };\n\n  handleSaveClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      savedSchool: this.state.editingSchool,\n      savedDegree: this.state.editingDegree,\n      savedFieldOfStudy: this.state.editingFieldOfStudy,\n      savedStartDate: this.state.editingStartDate,\n      savedEndDate: this.state.editingEndDate,\n    });\n  };\n\n  handleCancelClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      editingSchool: this.state.savedSchool,\n      editingDegree: this.state.savedDegree,\n      editingFieldOfStudy: this.state.savedFieldOfStudy,\n      editingStartDate: this.state.savedStartDate,\n      editingEndDate: this.state.savedEndDate,\n    });\n  };\n\n  render() {\n    const {\n      editingMode,\n      editingSchool,\n      savedSchool,\n      editingStartDate,\n      savedStartDate,\n      editingEndDate,\n      savedEndDate,\n      editingDegree,\n      savedDegree,\n      editingFieldOfStudy,\n      savedFieldOfStudy,\n    } = this.state;\n\n    const { handleDeleteClick, id } = this.props;\n\n    return (\n      <div>\n        {editingMode ? (\n          <div className=\"form-group\">\n            <School\n              editingSchool={editingSchool}\n              handleInputChange={this.handleSchoolInputChange}\n            />\n            <Date\n              editingStartDate={editingStartDate}\n              handleStartDateChange={this.handleStartDateInputChange}\n              editingEndDate={editingEndDate}\n              handleEndDateChange={this.handleEndDateInputChange}\n            />\n            <Degree\n              editingDegree={editingDegree}\n              handleInputChange={this.handleDegreeInputChange}\n            />\n            <FieldOfStudy\n              editingFieldOfStudy={editingFieldOfStudy}\n              handleInputChange={this.handleFieldOfStudyInputChange}\n            />\n            {/* SAVE BTN */}\n            <button onClick={this.handleSaveClick} className=\"btn btn-primary\">\n              Save\n            </button>\n            {/* CANCEL BTN */}\n            <button\n              onClick={this.handleCancelClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Cancel\n            </button>\n            {/* DELETE BTN */}\n            <button\n              className=\"btn btn-outline-danger delete-icon\"\n              onClick={() => handleDeleteClick(id)}\n            >\n              <span>&times;</span>\n            </button>\n          </div>\n        ) : (\n          <div className=\"container-education\">\n            <div className=\"job-title\">\n              <p\n                className=\"name job font-weight-bold\"\n                onClick={this.handleToggleEditingClick}\n              >\n                {savedSchool ? (\n                  savedSchool\n                ) : (\n                  <mark className=\"font-weight-normal\">School</mark>\n                )}\n              </p>\n              <small className=\"name\" onClick={this.handleToggleEditingClick}>\n                {savedStartDate || savedEndDate\n                  ? savedStartDate && savedEndDate\n                    ? savedStartDate + \" to \" + savedEndDate\n                    : savedStartDate || savedEndDate\n                  : null}\n              </small>\n            </div>\n            <p className=\"name\" onClick={this.handleToggleEditingClick}>\n              {savedDegree ? savedDegree : <mark>Degree</mark>}\n            </p>\n            <p className=\"name\" onClick={this.handleToggleEditingClick}>\n              {savedFieldOfStudy ? (\n                savedFieldOfStudy\n              ) : (\n                <mark>Field of Study</mark>\n              )}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass School extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.textInput.current.focus();\n  }\n\n  render() {\n    const { editingSchool, handleInputChange } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"school\">School</label>\n        <input\n          type=\"text\"\n          id=\"school\"\n          name=\"school\"\n          className=\"form-control\"\n          value={editingSchool}\n          onChange={handleInputChange}\n          ref={this.textInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst Date = ({\n  editingStartDate,\n  handleStartDateChange,\n  editingEndDate,\n  handleEndDateChange,\n}) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        {/* START DATE */}\n        <label htmlFor=\"start\">Start Date:</label>\n        <input\n          type=\"month\"\n          id=\"start\"\n          name=\"start\"\n          className=\"form-control\"\n          min=\"2000-01\"\n          max=\"2020-12\"\n          value={editingStartDate}\n          onChange={handleStartDateChange}\n        />\n      </div>\n      <div className=\"col\">\n        {/* END DATE */}\n        <label htmlFor=\"end\">End Date:</label>\n        <input\n          type=\"month\"\n          id=\"end\"\n          name=\"end\"\n          className=\"form-control\"\n          min=\"2000-01\"\n          max=\"2020-12\"\n          value={editingEndDate}\n          onChange={handleEndDateChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst Degree = ({ editingDegree, handleInputChange }) => {\n  return (\n    <div>\n      <label htmlFor=\"degree\">Degree</label>\n      <input\n        type=\"text\"\n        list=\"degree-options\"\n        id=\"degree\"\n        name=\"degree\"\n        className=\"form-control\"\n        value={editingDegree}\n        onChange={handleInputChange}\n      />\n      <datalist id=\"degree-options\">\n        <option value=\"High School\">High School</option>\n        <option value=\"Bachelor's\">Bachelor's</option>\n        <option value=\"Master's\">Master's</option>\n        <option value=\"Doctorate\">Doctorate</option>\n        <option value=\"Other\">Other</option>\n      </datalist>\n    </div>\n  );\n};\n\nconst FieldOfStudy = ({ editingFieldOfStudy, handleInputChange }) => {\n  return (\n    <div>\n      <label htmlFor=\"fieldOfStudy\">Field of Study</label>\n      <input\n        type=\"text\"\n        id=\"fieldOfStudy\"\n        name=\"fieldOfStudy\"\n        className=\"form-control\"\n        value={editingFieldOfStudy}\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nclass SkillsField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingMode: props.editingMode,\n      editingName: \"\",\n      savedName: \"\",\n      editingYears: \"\",\n      savedYears: \"\",\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.state.editingMode) this.textInput.focus();\n  }\n\n  componentDidUpdate() {\n    if (this.state.editingMode) this.textInput.focus();\n  }\n\n  handleSkillInputChange = (e) => {\n    this.setState({ editingName: e.target.value });\n  };\n\n  handleYearsInputChange = (e) => {\n    this.setState({ editingYears: e.target.value });\n  };\n\n  handleToggleEditingClick = () => {\n    this.setState({ editingMode: !this.state.editingMode });\n  };\n\n  handleSaveClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      savedName: this.state.editingName,\n      savedYears: this.state.editingYears,\n    });\n  };\n\n  handleCancelClick = () => {\n    this.handleToggleEditingClick();\n    this.setState({\n      editingName: this.state.savedName,\n      editingYears: this.state.savedYears,\n    });\n  };\n\n  render() {\n    const {\n      editingMode,\n      editingName,\n      savedName,\n      editingYears,\n      savedYears,\n    } = this.state;\n    const { handleDeleteClick, id } = this.props;\n\n    return (\n      <div>\n        {editingMode ? (\n          <div className=\"form-group\">\n            <div className=\"row\">\n              <div className=\"col-7\">\n                <label htmlFor=\"name\">Skill</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"username\"\n                  className=\"form-control\"\n                  value={editingName}\n                  onChange={this.handleSkillInputChange}\n                  ref={(input) => (this.textInput = input)}\n                />\n              </div>\n              <div className=\"col-5\">\n                <label htmlFor=\"years\">Years of Experience</label>\n                <select\n                  name=\"years\"\n                  id=\"years\"\n                  className=\"form-control\"\n                  value={editingYears}\n                  onChange={this.handleYearsInputChange}\n                >\n                  <option value=\"\">-----</option>\n                  <option value=\"1 year\">1 year</option>\n                  <option value=\"2 years\">2 years</option>\n                  <option value=\"3 years\">3 years</option>\n                  <option value=\"4 years\">4 years</option>\n                  <option value=\"5 years\">5+ years</option>\n                </select>\n              </div>\n            </div>\n            {/* SAVE BTN */}\n            <button\n              onClick={this.handleSaveClick}\n              className=\"btn btn-primary\"\n              disabled={!editingName && !editingYears}\n            >\n              Save\n            </button>\n            {/* CANCEL BTN */}\n            <button\n              onClick={this.handleCancelClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Cancel\n            </button>\n            {/* DELETE BTN */}\n            <button\n              className=\"btn btn-outline-danger delete-icon\"\n              onClick={() => handleDeleteClick(id)}\n            >\n              <span>&times;</span>\n            </button>\n          </div>\n        ) : (\n          <p\n            className=\"name container-skills\"\n            onClick={this.handleToggleEditingClick}\n          >\n            {savedName ? (\n              savedYears ? (\n                savedName + \" - \" + savedYears\n              ) : (\n                <span>\n                  {savedName} - <mark>Years of Experience</mark>\n                </span>\n              )\n            ) : savedYears ? (\n              <span>\n                <mark>Skill</mark> - {savedYears}\n              </span>\n            ) : (\n              <span>\n                <mark>Skill</mark>\n              </span>\n            )}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default class Skills extends Component {\n  constructor() {\n    super();\n    this.state = {\n      names: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      names: [{ id: uniqid() }],\n    });\n  }\n\n  handleAddNameClick = () => {\n    this.setState({\n      names: [...this.state.names, { id: uniqid() }],\n    });\n  };\n\n  handleDeleteClick = (id) => {\n    this.setState((prevState) => ({\n      names: prevState.names.map((name) => {\n        if (name.id === id) name.id = \"\";\n        return name;\n      }),\n    }));\n  };\n\n  render() {\n    const { names } = this.state;\n\n    return (\n      <div>\n        <h4 className=\"section-title\">Skills</h4>\n        <hr />\n\n        {names.map((name, index) => {\n          if (!name.id) return null;\n          if (index === 0) {\n            return (\n              <SkillsField\n                id={name.id}\n                key={name.id}\n                editingMode={false}\n                handleDeleteClick={this.handleDeleteClick}\n              />\n            );\n          }\n          return (\n            <SkillsField\n              id={name.id}\n              key={name.id}\n              editingMode={true}\n              handleDeleteClick={this.handleDeleteClick}\n            />\n          );\n        })}\n\n        <p onClick={this.handleAddNameClick} className=\"add-name\">\n          &#43; Add Skills\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Name from \"./components/Name\";\nimport Profession from \"./components/Profession\";\nimport Profile from \"./components/Profile\";\nimport WorkExp from \"./components/WorkExp\";\nimport Contact from \"./components/Contact\";\nimport Education from \"./components/Education\";\nimport Skills from \"./components/Skills\";\nimport \"./styles/main.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-sm border border-1 rounded-sm bg-white\">\n      <Name />\n      <Profession />\n      <Contact />\n      <Profile />\n      <WorkExp />\n      <Education />\n      <Skills />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}